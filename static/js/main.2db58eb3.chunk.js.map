{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactsItem/ContactsItem.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","components/ContactsItem/ContactsItem.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","addContact","name","number","dispatch","contact","post","then","data","catch","error","deleteContact","id","delete","fetchContacts","a","get","message","getFiltered","state","contacts","filter","getAllContacts","items","getLoading","loading","getErrorMessage","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","item","includes","mapDispatchToProps","onDelete","contactsOperations","connect","filtered","map","type","className","delete_button","onClick","value","contactsSelectors","onChange","e","target","ContactForm","handleChange","setState","onHandleSubmit","preventDefault","props","find","alert","onSubmit","form","this","form_input","button","Component","App","isLoadingContacts","isContactIncludes","color","height","width","length","createReducer","_","action","payload","index","findIndex","slice","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","phonebookReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2db58eb3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__NIldT\",\"form_input\":\"ContactForm_form_input__13CQb\",\"button\":\"ContactForm_button__qBBRG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"delete_button\":\"ContactsItem_delete_button__1cY2G\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const deleteContact = createAction('phonebook/Delete');\r\nexport const changeFilter = createAction('phonebook/changeFilter');\r\n","import axios from 'axios';\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactError,\r\n  deleteContactSuccess,\r\n  fetchContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n} from './phonebook-actions';\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n};\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport default { addContact, deleteContact, fetchContacts };\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.contacts.loading;\r\n\r\nconst getFiltered = state => state.contacts.filter;\r\n\r\nconst getAllContacts = state => state.contacts.items;\r\n\r\nconst getErrorMessage = state => state.contacts.error;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getAllContacts, getFiltered],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(item =>\r\n      item.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);\r\n\r\nexport default {\r\n  getLoading,\r\n  getFiltered,\r\n  getAllContacts,\r\n  getErrorMessage,\r\n  getFilteredContacts,\r\n};\r\n","import React from 'react';\r\nimport { delete_button } from './ContactsItem.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { contactsOperations } from '../../redux/phonebook';\r\nconst ContactsItem = ({ filtered, onDelete }) => {\r\n  return filtered.map(({ name, number, id }) => {\r\n    return (\r\n      <li key={id} name={name}>\r\n        {name}: {number}\r\n        <button\r\n          type=\"button\"\r\n          className={delete_button}\r\n          onClick={() => onDelete(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onDelete: contactsOperations.deleteContact,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactsItem);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/phonebook/phonebook-actions';\r\nimport { contactsSelectors } from '../../redux/phonebook';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <>\r\n      <p>Find contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={value}\r\n        onChange={onChange}\r\n      ></input>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: contactsSelectors.getFiltered(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from 'react';\r\nimport { form, button, form_input } from './ContactForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from '../../redux/phonebook';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  onHandleSubmit = e => {\r\n    e.preventDefault();\r\n    const found = this.props.contacts.find(item => {\r\n      return item.name === this.state.name || item.number === this.state.number;\r\n    });\r\n    if (found) {\r\n      alert('Такой контакт уже есть!');\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state);\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={form} onSubmit={this.onHandleSubmit}>\r\n        <h4>Name</h4>\r\n        <input\r\n          className={form_input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n        ></input>\r\n        <h4>Number</h4>\r\n        <input\r\n          className={form_input}\r\n          type=\"number\"\r\n          name=\"number\"\r\n          value={this.state.number}\r\n          onChange={this.handleChange}\r\n        ></input>\r\n        <button type=\"submit\" className={button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onSubmit: contactsOperations.addContact,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getAllContacts(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ContactsItem from './components/ContactsItem/ContactsItem';\nimport Filter from './components/Filter/Filter';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Loader from 'react-loader-spinner';\nimport { contactsSelectors, contactsOperations } from './redux/phonebook';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    const { isLoadingContacts, isContactIncludes, error } = this.props;\n    return (\n      <div className=\"container\">\n        <h2>Phonebook</h2>\n        <ContactForm />\n        {error && <p className=\"error-message\">{error}</p>}\n        {isLoadingContacts && (\n          <Loader type=\"ThreeDots\" color=\"grey\" height={100} width={100} />\n        )}\n        {isContactIncludes && (\n          <>\n            <h2>Contacts</h2>\n            <Filter />\n            <ul className=\"contacts\">\n              <ContactsItem filtered={this.props.contacts} />\n            </ul>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: contactsSelectors.getFilteredContacts(state),\n  isContactIncludes: state.contacts.items.length > 0,\n  isLoadingContacts: contactsSelectors.getLoading(state),\n  error: contactsSelectors.getErrorMessage(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactSuccess,\r\n  addContactRequest,\r\n  addContactError,\r\n  deleteContactSuccess,\r\n  deleteContactRequest,\r\n  deleteContactError,\r\n  changeFilter,\r\n  fetchContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n} from './phonebook-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, action) => action.payload,\r\n  [addContactSuccess]: (state, action) => [...state, action.payload],\r\n  [deleteContactSuccess]: (state, action) => {\r\n    const index = state.findIndex(item => item.id === action.payload);\r\n    return [...state.slice(0, index), ...state.slice(index + 1)];\r\n  },\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, action) => action.payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContactsError]: (_, { payload }) => payload,\r\n  [fetchContactsRequest]: () => null,\r\n  [addContactRequest]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport phonebookReducer from './phonebook/phonebook-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: phonebookReducer,\r\n  },\r\n  middleware,\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}